<?php

namespace Tests\Unit\Repositories;

use App\Models\Category;
use App\Repositories\CategoryRepository;
use App\Repositories\ICategoryRepository;
use Faker\Factory;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Faker\Factory as Faker;
use Mockery\Mock;
use Tests\TestCase;

class CategoryRepositoryTest extends TestCase
{
    use RefreshDatabase;
    /**
     * @var ICategoryRepository $categoryRepository
     */
    private $categoryRepository;

    private $faker;

    protected $category;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->categoryRepository=new CategoryRepository();
        $this->faker=Faker::create();
        $this->category=[
            "name"=>$this->faker->name,
            "description"=>$this->faker->name
        ];
    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function testExample()
    {
        $this->assertTrue(true);
    }

    /**
     * test insert repository
     */
    public function testInsert(){
       $category= $this->categoryRepository->create($this->category);
        $this->assertInstanceOf(Category::class,$category);
        $this->assertEquals($this->category['name'],$category->name);
        $this->assertEquals($this->category['description'],$category->description);
        $this->assertDatabaseHas("categories",$this->category);
    }

    public function testUpdate(){
        //we using factory for insert data to database
        $category=\factory(Category::class)->create();
        $categoryUpdated=$this->categoryRepository->update($category->id,$this->category);

        $this->assertEquals($category->id,$categoryUpdated->id);
        $this->assertEquals($categoryUpdated->name,$this->category["name"]);
        $this->assertEquals($categoryUpdated->description,$this->category['description']);

    }
    public function testFind(){
        $category=\factory(Category::class)->create();
        $data=$this->categoryRepository->find($category->id);
        $this->assertEquals($category->id,$data->id);
        $this->assertEquals($category->name,$data->name);
        $this->assertEquals($category->description,$data->description);
    }

    public function testDelete(){
        $category=\factory(Category::class)->create();
        $this->categoryRepository->delete($category);
        $this->assertDatabaseMissing("categories",$category->toArray());
    }


}
